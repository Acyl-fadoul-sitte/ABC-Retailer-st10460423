@using ABCRetailers.Models
@model IEnumerable<ABCRetailers.Models.Order>

@{
    ViewData["Title"] = "Orders";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold text-primary">
            <i class="fas fa-shopping-cart me-2"></i> Orders
        </h2>
        <a asp-action="Create" class="btn btn-gradient-primary shadow-sm rounded-pill px-4">
            <i class="fas fa-plus me-2"></i> Add Order
        </a>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="card border-0 shadow-lg rounded-4">
            <div class="card-header bg-gradient text-white rounded-top-4"
                 style="background: linear-gradient(90deg, #007bff, #00c6ff);">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="fw-bold mb-0">All Orders</h5>
                    <button class="btn btn-light btn-sm rounded-pill px-3">Refresh</button>
                </div>
            </div>

            <div class="card-body p-4">
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Product</th>
                                <th>Order Date</th>
                                <th>Qty</th>
                                <th>Total</th>
                                <th>Status</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.OrderByDescending(o => o.OrderDateUtc))
                            {
                                <tr class="border-bottom">
                                    <td><code>@(order.Id?.Length > 8 ? order.Id[..8] + "…" : order.Id)</code></td>
                                    <td>@order.CustomerId</td>
                                    <td>@(!string.IsNullOrWhiteSpace(order.ProductName) ? order.ProductName : order.ProductId)</td>
                                    <td>@FormatLocal(order.OrderDateUtc)</td>
                                    <td>@order.Quantity</td>
                                    <td class="fw-bold text-success">@order.TotalAmount.ToString("C")</td>
                                    <td>
                                        <span class="badge rounded-pill bg-@Badge(order.Status)">
                                            @order.Status
                                        </span>
                                    </td>
                                    <td class="text-end">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-sm btn-outline-info rounded-pill" title="Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-sm btn-outline-primary rounded-pill" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>

                                            @if (order.Status is not OrderStatus.Completed and not OrderStatus.Cancelled)
                                            {
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm btn-outline-warning rounded-pill dropdown-toggle" data-bs-toggle="dropdown" title="Update Status">
                                                        <i class="fas fa-sync-alt"></i>
                                                    </button>
                                                    <ul class="dropdown-menu shadow-lg">
                                                        @if (order.Status == OrderStatus.Submitted)
                                                        {
                                                            <li>
                                                                <a class="dropdown-item" href="#" onclick="updateOrderStatus('@order.Id','Processing')">
                                                                    <i class="fas fa-cog text-info"></i> Mark as Processing
                                                                </a>
                                                            </li>
                                                        }
                                                        @if (order.Status == OrderStatus.Processing)
                                                        {
                                                            <li>
                                                                <a class="dropdown-item" href="#" onclick="updateOrderStatus('@order.Id','Completed')">
                                                                    <i class="fas fa-check text-success"></i> Mark as Completed
                                                                </a>
                                                            </li>
                                                        }
                                                        <li>
                                                            <a class="dropdown-item text-danger" href="#" onclick="updateOrderStatus('@order.Id','Cancelled')">
                                                                <i class="fas fa-times text-danger"></i> Cancel Order
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            }

                                            <button type="button" class="btn btn-sm btn-outline-danger rounded-pill" onclick="confirmDelete('@order.Id','@order.Id')" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info shadow-sm rounded-4 mt-4">
            <i class="fas fa-info-circle me-2"></i> No orders found.
            <a asp-action="Create" class="alert-link">Create your first order</a>!
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow-lg">
            <div class="modal-header bg-danger text-white rounded-top-4">
                <h5 class="modal-title"><i class="fas fa-exclamation-triangle me-2"></i> Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete order <strong id="orderId"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary rounded-pill" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger rounded-pill">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    string FormatLocal(DateTimeOffset? dto)
        => dto.HasValue ? dto.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm") : "-";

    string Badge(OrderStatus status) => status switch
    {
        OrderStatus.Submitted => "primary",
        OrderStatus.Processing => "info",
        OrderStatus.Completed => "success",
        OrderStatus.Cancelled => "danger",
        _ => "secondary"
    };
}

<!-- hidden antiforgery token for AJAX -->
<form id="__af" method="post" style="display:none">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function confirmDelete(orderIdFull, orderIdForDisplay) {
            const shortId = (orderIdForDisplay && orderIdForDisplay.length > 8)
                ? orderIdForDisplay.substring(0, 8) + '…'
                : orderIdForDisplay;
            document.getElementById('orderId').textContent = shortId;
            document.getElementById('deleteForm').action =
                '@Url.Action("Delete", "Order")/' + encodeURIComponent(orderIdFull);
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        function updateOrderStatus(orderId, newStatus) {
            if (!confirm(`Are you sure you want to change the status to "${newStatus}"?`)) return;

            const token = document.querySelector('#__af input[name="__RequestVerificationToken"]').value;
            const body = new URLSearchParams({ id: orderId, newStatus: newStatus, __RequestVerificationToken: token });

            fetch('@Url.Action("UpdateOrderStatus", "Order")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' },
                body
            })
            .then(r => r.json())
            .then(data => {
                if (data && data.success) location.reload();
                else alert('Error: ' + (data && data.message ? data.message : 'Unknown error'));
            })
            .catch(() => alert('An error occurred while updating the status'));
        }
    </script>
}
